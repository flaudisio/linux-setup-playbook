---
- name: Create extra directories
  ansible.builtin.file:
    path: "{{ item | expanduser }}"
    state: directory
  loop: "{{ dotfiles_extra_dirs }}"

- name: Clone repository to local directory
  ansible.builtin.git:
    repo: "{{ dotfiles_repo_url }}"
    dest: "{{ dotfiles_repo_local_dest }}"
    version: "{{ dotfiles_repo_version }}"

- name: Set helper variables
  ansible.builtin.set_fact:
    _dotfiles_home_expanded: "{{ dotfiles_home | expanduser }}"
    _dotfiles_search_base_dir: "{{ dotfiles_repo_local_dest | expanduser }}/{{ dotfiles_repo_src_dir }}"

- name: Find source files
  ansible.builtin.find:
    paths: "{{ _dotfiles_search_base_dir }}"
    file_type: file
    hidden: true
    recurse: false
  register: _found_src_files

- name: Find base directories
  ansible.builtin.find:
    paths: "{{ _dotfiles_search_base_dir }}"
    file_type: directory
    hidden: true
    recurse: false
  register: _found_base_dirs

- name: Find source directories
  ansible.builtin.find:
    paths: "{{ [_dotfiles_search_base_dir] | product(_base_source_dirs) | map('path_join') | list }}"
    file_type: directory
    recurse: false
  vars:
    _base_source_dirs: "{{ _found_base_dirs.files | map(attribute='path') }}"
  register: _found_src_dirs

- name: Create file symlinks
  ansible.builtin.file:
    src: "{{ item }}"
    path: "{{ _dotfiles_home_expanded }}/{{ item | basename }}"
    state: link
  loop: "{{ _found_src_files.files | map(attribute='path') }}"

- name: Create directory symlinks
  ansible.builtin.file:
    src: "{{ item }}"
    path: "{{ _dotfiles_home_expanded }}/{{ _base_path }}"
    state: link
  loop: "{{ _found_src_dirs.files | map(attribute='path') }}"
  vars:
    _base_path: "{{ item | replace(_dotfiles_search_base_dir, '') | trim('/') }}"
